services:
  # MySQL Replication
  mysql-primary:
    image: mysql:8.0.40 # live mysql 버전과 동일하게 유지
    container_name: mysql-primary
    environment:
      TZ: "Asia/Seoul"
      MYSQL_ROOT_PASSWORD: "1234"
    ports:
      - "3301:3306"
      - "33061:33061"
    volumes:
      - "./mysql/conf.d:/etc/mysql/conf.d"
      - "./mysql/data/mysql-primary:/var/lib/mysql"
      - "./mysql/init-primary:/docker-entrypoint-initdb.d"
    command:
      - "--server-id=1"
      - "--loose-group-replication-local-address=mysql-primary:33061"
      - "--loose-group_replication_bootstrap_group=OFF"
      - "--loose-group-replication-start-on-boot=OFF"
    networks:
      - bridge-network

  mysql-secondary:
    image: mysql:8.0.40
    container_name: mysql-secondary
    environment:
      TZ: "Asia/Seoul"
      MYSQL_ROOT_PASSWORD: "1234"
    ports:
      - "3302:3306"
      - "33062:33061"
    volumes:
      - "./mysql/conf.d:/etc/mysql/conf.d"
      - "./mysql/data/mysql-secondary:/var/lib/mysql"
      - "./mysql/init-secondary/init-secondary.sql:/docker-entrypoint-initdb.d/init-secondary.sql"
    command:
      - "--server-id=2"
      - "--loose-group-replication-local-address=mysql-secondary:33061"
      - "--loose-group_replication_bootstrap_group=OFF"
      - "--loose-group-replication-start-on-boot=OFF"
    depends_on:
      - mysql-primary
    networks:
      - bridge-network

  mysql-router:
    image: mysql/mysql-router:8.0.32
    container_name: mysql-router
    depends_on:
      - mysql-primary
      - mysql-secondary
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_HOST=mysql-primary
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
      - MYSQL_INNODB_CLUSTER_MEMBERS=2
    volumes:
      - ./mysql-router/router.conf:/etc/mysql-router.conf
    ports:
      - "6446:6446"
    networks:
      - bridge-network


networks:
  bridge-network:
    external: true
